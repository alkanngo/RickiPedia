@use 'sass:color';
@use 'variables' as *;

// Responsive breakpoints
@mixin mobile {
  @media (max-width: #{$breakpoint-mobile - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$breakpoint-mobile}) and (max-width: #{$breakpoint-tablet - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$breakpoint-tablet}) {
    @content;
  }
}

@mixin large-desktop {
  @media (min-width: #{$breakpoint-large}) {
    @content;
  }
}

// Container
@mixin container {
  max-width: $container-max-width;
  margin: 0 auto;
  padding: 0 $container-padding;
  width: 100%;
}

// Flexbox helpers
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Grid helpers
@mixin grid {
  display: grid;
  gap: $grid-gap;
}

@mixin grid-columns($cols) {
  grid-template-columns: repeat($cols, 1fr);
}

// Typography
@mixin heading-1 {
  font-family: $font-family-heading;
  font-size: $font-size-xxl;
  font-weight: $font-weight-bold;
  line-height: 1.2;
}

@mixin heading-2 {
  font-family: $font-family-heading;
  font-size: $font-size-xl;
  font-weight: $font-weight-bold;
  line-height: 1.3;
}

// Interactive elements
@mixin button-base {
  padding: $spacing-small $spacing-medium;
  border: none;
  border-radius: $border-radius;
  font-size: $font-size-medium;
  font-weight: $font-weight-medium;
  cursor: pointer;
  transition: all $transition-duration $transition-timing;
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

// Card styles
@mixin card-base {
  background: var(--surface-color);
  border-radius: $border-radius;
  box-shadow: $shadow-medium;
  overflow: hidden;
}

// Portal Animation
@mixin portal-glow($color: 'var(--primary-color)') {
  &::before {
    content: '';
    position: absolute;
    inset: -2px;
    background: radial-gradient(
      circle at center,
      #{$color} 0%,
      transparent 70%
    );
    border-radius: inherit;
    z-index: -1;
    opacity: 0;
    transition: opacity $transition-duration $transition-timing;
  }

  &:hover::before {
    opacity: 1;
  }
}

// Glass Effect
@mixin glass-effect {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

// Text Truncate
@mixin text-truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

// Focus Styles
@mixin focus-ring {
  &:focus-visible {
    outline: 2px solid var(--accent-color);
    outline-offset: 2px;
  }
}

// Hover Media Query
@mixin hover {
  @media (hover: hover) {
    &:hover {
      @content;
    }
  }
}

// Dark Mode
@mixin dark-mode {
  @media (prefers-color-scheme: dark) {
    @content;
  }
}

// Animation Keyframes
@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

// Loading Skeleton
@mixin skeleton-loading {
  background: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0.1),
    rgba(255, 255, 255, 0.2),
    rgba(255, 255, 255, 0.1)
  );
  background-size: 200% 100%;
  animation: skeleton-loading 1.5s infinite;
}

@include keyframes(skeleton-loading) {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

// Responsive Font Size
@mixin responsive-font($min-size, $max-size, $min-width: $breakpoint-mobile, $max-width: $breakpoint-desktop) {
  font-size: clamp(#{$min-size}, #{($max-size - $min-size) / ($max-width - $min-width) * 100}vw + #{$min-size}, #{$max-size});
}

// Animation mixins
@mixin fade-in {
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  animation: fadeIn $transition-duration ease-in;
}

@mixin slide-up {
  @keyframes slideUp {
    from {
      transform: translateY(20px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
  animation: slideUp $transition-duration $transition-timing;
} 